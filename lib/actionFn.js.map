{"version":3,"sources":["../src/actionFn.js"],"names":["actionFn","url","name","options","ACTIONS","meta","actionFetch","actionSuccess","actionFail","actionReset","actionCache","actionAbort","pubsub","requestHolder","getOptions","urlT","params","getState","globalOptions","holder","Function","baseOptions","getUrl","pathvars","resultUrlT","urlOptions","rootUrl","rootUrlObject","parse","urlObject","host","urlPath","path","replace","protocol","fetch","dispatch","opts","id","reducerName","cacheManager","expire","cache","state","prefix","data","getData","undefined","Promise","resolve","response","then","type","abort","defer","pop","err","Error","reject","request","result","validation","ret","responseHandler","res","catch","fn","args","callback","syncing","push","middlewareParser","isLoading","requestOptions","prevData","fetchResolverOpts","actions","prefetch","done","fail","set","promise","d","transformer","origData","broadcast","forEach","postfetch","error","loading","reset","mutation","force","sync","isServer","server","store","modifyParams","helpers","crud","fnHelperCallback","memo","func","helpername","call","index","length","callbackFn","helpersResult","newArgs","concat","Object","keys","reduce","key"],"mappings":"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","file":"actionFn.js","sourcesContent":["\"use strict\";\n\nimport fastApply from \"fast-apply\";\nimport libUrl from \"url\";\nimport urlTransform from \"./urlTransform\";\nimport merge from \"./utils/merge\";\nimport get from \"./utils/get\";\nimport fetchResolver from \"./fetchResolver\";\nimport PubSub from \"./PubSub\";\nimport createHolder from \"./createHolder\";\nimport { none, extractArgs, defaultMiddlewareArgsParser, CRUD } from \"./helpers\";\nimport { getCacheManager } from \"./utils/cache\";\n\n/**\n * Constructor for create action\n * @param  {String} url          endpoint's url\n * @param  {String} name         action name\n * @param  {Object} options      action configuration\n * @param  {Object} ACTIONS      map of actions\n * @param  {[type]} fetchAdapter adapter for fetching data\n * @return {Function+Object}     action function object\n */\nexport default function actionFn(url, name, options, ACTIONS={}, meta={}) {\n  const { actionFetch, actionSuccess, actionFail,\n    actionReset, actionCache, actionAbort } = ACTIONS;\n  const pubsub = new PubSub();\n  const requestHolder = createHolder();\n\n  function getOptions(urlT, params, getState) {\n    const globalOptions = !meta.holder ? {} :\n      (meta.holder.options instanceof Function) ?\n        meta.holder.options(urlT, params, getState) : (meta.holder.options);\n    const baseOptions = !(options instanceof Function) ? options :\n      options(urlT, params, getState);\n    return merge({}, globalOptions, baseOptions, params);\n  }\n\n  function getUrl(pathvars, params, getState) {\n    const resultUrlT = urlTransform(url, pathvars, meta.urlOptions);\n    let urlT = resultUrlT;\n    let rootUrl = get(meta, \"holder\", \"rootUrl\");\n    rootUrl = !(rootUrl instanceof Function) ? rootUrl :\n      rootUrl(urlT, params, getState);\n    if (rootUrl) {\n      const rootUrlObject = libUrl.parse(rootUrl);\n      const urlObject = libUrl.parse(urlT);\n      if (!urlObject.host) {\n        const urlPath = (rootUrlObject.path ? rootUrlObject.path.replace(/\\/$/, \"\") : \"\") +\n          \"/\" + (urlObject.path ? urlObject.path.replace(/^\\//, \"\") : \"\");\n        urlT = `${rootUrlObject.protocol}//${rootUrlObject.host}${urlPath}`;\n      }\n    }\n    return urlT;\n  }\n\n  function fetch(pathvars, params, options = {}, getState=none, dispatch=none) {\n    const urlT = getUrl(pathvars, params, getState);\n    const opts = getOptions(urlT, params, getState);\n    let id = meta.reducerName || \"\";\n    const cacheManager = getCacheManager(options.expire, meta.cache);\n\n    if (cacheManager && getState !== none) {\n      const state = getState();\n      const cache = get(state, meta.prefix, meta.reducerName, \"cache\");\n      id += \"_\" + cacheManager.id(pathvars, params);\n      const data = cacheManager.getData(\n        cache && id && cache[id] !== undefined && cache[id]\n      );\n      if (data !== undefined) {\n        return Promise.resolve(data);\n      }\n    }\n    const response = meta.fetch(urlT, opts);\n    if (cacheManager && dispatch !== none && id) {\n      response.then((data)=> {\n        dispatch({ type: actionCache, id, data, expire: cacheManager.expire });\n      });\n    }\n    return response;\n  }\n\n  function abort() {\n    const defer = requestHolder.pop();\n    const err = new Error(\"Application abort request\");\n    defer && defer.reject(err);\n    return err;\n  }\n\n  /**\n   * Fetch data from server\n   * @param  {Object}   pathvars    path vars for url\n   * @param  {Object}   params      fetch params\n   * @param  {Function} getState    helper meta function\n  */\n  function request(pathvars, params, options, getState=none, dispatch=none) {\n    const response = fetch(pathvars, params, options, getState, dispatch);\n    const result = !meta.validation ? response : response.then(\n      data=> new Promise(\n        (resolve, reject)=> meta.validation(data,\n          err=> err ? reject(err) : resolve(data))));\n    let ret = result;\n    const responseHandler = get(meta, \"holder\", \"responseHandler\");\n    if (responseHandler) {\n      if (result && result.then) {\n        ret = result.then(\n          (data)=> {\n            const res = responseHandler(null, data);\n            if (res === undefined) {\n              return data;\n            } else {\n              return res;\n            }\n          },\n          err=> responseHandler(err)\n        );\n      } else {\n        ret = responseHandler(result);\n      }\n    }\n    ret && ret.catch && ret.catch(none);\n    return ret;\n  }\n\n  /**\n   * Fetch data from server\n   * @param  {Object}   pathvars    path vars for url\n   * @param  {Object}   params      fetch params\n   * @param  {Function} callback)   callback execute after end request\n   */\n  function fn(...args) {\n    const [pathvars, params, callback] = extractArgs(args);\n    const syncing = params ? !!params.syncing : false;\n    params && delete params.syncing;\n    pubsub.push(callback);\n    return (...middlewareArgs)=> {\n      const middlewareParser = get(meta, \"holder\", \"middlewareParser\") ||\n        defaultMiddlewareArgsParser;\n      const { dispatch, getState } = middlewareParser(...middlewareArgs);\n      const state = getState();\n      const isLoading = get(state, meta.prefix, meta.reducerName, \"loading\");\n      if (isLoading) {\n        return Promise.reject(\"isLoading\");\n      }\n      const requestOptions = { pathvars, params };\n      const prevData =  get(state, meta.prefix, meta.reducerName, \"data\");\n      dispatch({ type: actionFetch, syncing, request: requestOptions });\n      const fetchResolverOpts = {\n        dispatch,\n        getState,\n        requestOptions,\n        actions: meta.actions,\n        prefetch: meta.prefetch\n      };\n      const result = new Promise((done, fail)=> {\n        fetchResolver(0, fetchResolverOpts, (err)=> {\n          if (err) {\n            pubsub.reject(err);\n            return fail(err);\n          }\n          new Promise((resolve, reject)=> {\n            requestHolder.set({\n              resolve,\n              reject,\n              promise: request(pathvars, params, {}, getState, dispatch).then(resolve, reject)\n            });\n          }).then((d)=> {\n            requestHolder.pop();\n            const data = meta.transformer(d, prevData, {\n              type: actionSuccess, request: requestOptions\n            });\n            dispatch({\n              data,\n              origData: d,\n              type: actionSuccess,\n              syncing: false,\n              request: requestOptions\n            });\n            if (meta.broadcast) {\n              meta.broadcast.forEach((type)=> {\n                dispatch({ type, data, origData: d, request: requestOptions });\n              });\n            }\n            if (meta.postfetch) {\n              meta.postfetch.forEach((postfetch)=> {\n                (postfetch instanceof Function) && postfetch({\n                  data, getState, dispatch, actions: meta.actions, request: requestOptions\n                });\n              });\n            }\n            pubsub.resolve(data);\n            done(data);\n          }, (error)=> {\n            dispatch({\n              error,\n              type: actionFail,\n              loading: false,\n              syncing: false,\n              request: requestOptions\n            });\n            pubsub.reject(error);\n            fail(error);\n          });\n        });\n      });\n      result.catch(none);\n      return result;\n    };\n  }\n\n  /*\n    Pure rest request\n   */\n  fn.request = function(pathvars, params, options) {\n    return request(pathvars, params, options || {});\n  };\n\n  /**\n   * Reset store to initial state\n   */\n  fn.reset = (mutation)=> {\n    abort();\n    return mutation === \"sync\" ? { type: actionReset, mutation } : { type: actionReset };\n  };\n\n  /*\n    Abort request\n   */\n  fn.abort = function() {\n    const error = abort();\n    return { type: actionAbort, error };\n  };\n\n  fn.force = function(...args) {\n    return (dispatch, getState)=> {\n      const state = getState();\n      const isLoading = get(state, meta.prefix, meta.reducerName, \"loading\");\n      if (isLoading) {\n        dispatch(fn.abort());\n      }\n      return fn(...args)(dispatch, getState);\n    };\n  };\n\n  /**\n   * Sync store with server. In server mode works as usual method.\n   * If data have already synced, data would not fetch after call this method.\n   * @param  {Object} pathvars    path vars for url\n   * @param  {Object} params      fetch params\n   * @param  {Function} callback) callback execute after end request\n   */\n  fn.sync = (...args)=> {\n    const [pathvars, params, callback] = extractArgs(args);\n    const isServer = meta.holder ? meta.holder.server : false;\n    return (dispatch, getState)=> {\n      const state = getState();\n      const store = state[name];\n      if (!isServer && store && store.sync) {\n        callback(null, store.data);\n        return;\n      }\n      const modifyParams = { ...params, syncing: true };\n      return fn(pathvars, modifyParams, callback)(dispatch, getState);\n    };\n  };\n\n  let helpers = meta.helpers || {};\n  if (meta.crud) {\n    helpers = { ...CRUD, ...helpers };\n  }\n  const fnHelperCallback = (memo, func, helpername)=> {\n    if (memo[helpername]) {\n      throw new Error(\n        `Helper name: \"${helpername}\" for endpoint \"${name}\" has been already reserved`\n      );\n    }\n    const { sync, call } = (func instanceof Function) ? { call: func } : func;\n    memo[helpername] = (...args)=> (dispatch, getState)=> {\n      const index = args.length - 1;\n      const callbackFn = (args[index] instanceof Function) ? args[index] : none;\n      const helpersResult = fastApply(call, { getState, dispatch, actions: meta.actions }, args);\n      const result = new Promise((resolve, reject)=> {\n        const callback = (err, data)=> {\n          err ? reject(err) : resolve(data);\n          callbackFn(err, data);\n        };\n        // If helper alias using async functionality\n        if (helpersResult instanceof Function) {\n          helpersResult((error, newArgs=[])=> {\n            if (error) {\n              callback(error);\n            } else {\n              fastApply(\n                sync ? fn.sync : fn, null, newArgs.concat(callback)\n              )(dispatch, getState);\n            }\n          });\n        } else {\n          // if helper alias is synchronous\n          const [pathvars, params] = helpersResult;\n          fastApply(\n            sync ? fn.sync : fn, null, [pathvars, params, callback]\n          )(dispatch, getState);\n        }\n      });\n      result.catch(none);\n      return result;\n    };\n    return memo;\n  };\n\n  return Object.keys(helpers).reduce(\n    (memo, key)=> fnHelperCallback(memo, helpers[key], key, helpers), fn);\n}\n"]}